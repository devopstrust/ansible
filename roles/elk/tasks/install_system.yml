# Установка и включение UFW
    - name: Устанавливаем и включаем UFW
      apt:
        name: ufw
        state: present

    - name: Включаем UFW
      ufw:
        state: enabled

# Настройка правил UFW для входящего трафика
    - name: Настройка правил UFW для входящего трафика
      ufw:
        rule: allow
        port: "{{ item.port }}"
        proto: tcp
      loop:
        - { port: '80', name: 'HTTP' }
        - { port: '8080', name: 'HTTP' }
        - { port: '22', name: 'SSH' }
      notify:
        - Reload UFW

# Настройка правил UFW для исходящего трафика на сервер ELK
    - name: Настройка правил UFW для исходящего трафика на сервер ELK
      ufw:
        rule: allow
        port: "{{ item.port }}"
        to_ip: "192.168.1.206"
        proto: tcp
      loop:
        - { port: '5044', name: 'Logstash' }
        - { port: '9200', name: 'Elasticsearch' }
        - { port: '9300', name: 'Elasticsearch' }
        - { port: '5601', name: 'Kibana' }
      notify:
        - Reload UFW

    - name: UFW - Deny all other incoming traffic by default
      ufw:
        state: enabled
        policy: deny
        direction: incoming

    - name: Проверка состояния UFW
      command: ufw status verbose
      register: ufw_status

    - name: Вывод состояния UFW в лог
      debug:
        msg: "{{ ufw_status.stdout }}"

# Настройка SSH
    - name: Резервное копирование конфигурации SSH
      copy:
        src: /etc/ssh/sshd_config
        dest: /etc/ssh/sshd_config.backup
        remote_src: yes
        backup: yes

    - name: Усиление конфигурации SSH
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^{{ item.key }}'
        line: '{{ item.key }} {{ item.value }}'
        state: present
      loop:
        - { key: 'PermitRootLogin', value: 'no' }
        - { key: 'PasswordAuthentication', value: 'no' }
        - { key: 'ChallengeResponseAuthentication', value: 'no' }
        - { key: 'UsePAM', value: 'no' }
        - { key: 'MaxAuthTries', value: '3' }
        - { key: 'PermitTunnel', value: 'no' }
        - { key: 'AllowUsers', value: 'sarmat' }  # кому разрешено список
      notify:
        - Restart SSH